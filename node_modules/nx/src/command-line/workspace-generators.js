"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.workspaceGenerators = void 0;
const tslib_1 = require("tslib");
const configuration_1 = require("../config/configuration");
const output_1 = require("../utils/output");
/**
 * Wraps `workspace-generator` to invoke `generate`.
 *
 * @deprecated(v17): Remove `workspace-generator in v17. Use local plugins.
 */
function workspaceGenerators(args) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const generator = process.argv.slice(3);
        output_1.output.warn({
            title: `Workspace Generators are no longer supported`,
            bodyLines: [
                'Instead, Nx now supports executing generators or executors from ',
                'local plugins. To run a generator from a local plugin, ',
                'use `nx generate` like you would with any other generator.',
                '',
                'For more information, see: https://nx.dev/deprecated/workspace-generators',
            ],
        });
        const nxJson = (0, configuration_1.readNxJson)();
        const collection = nxJson.npmScope
            ? `@${nxJson.npmScope}/workspace-plugin`
            : 'workspace-plugin';
        args._ = args._.slice(1);
        args.generator = `${collection}:${generator}`;
        return (yield Promise.resolve().then(() => require('./generate'))).generate(process.cwd(), args);
    });
}
exports.workspaceGenerators = workspaceGenerators;
//# sourceMappingURL=workspace-generators.js.map